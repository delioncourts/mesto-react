{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _checkServerResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n\n  getProfile() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(this._checkServerResponse);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(this._checkServerResponse);\n  }\n\n  editProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(this._checkServerResponse);\n  }\n\n  addCard(name, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(this._checkServerResponse);\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkServerResponse);\n  }\n\n  addLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(this._checkServerResponse);\n  }\n\n  deleteLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkServerResponse);\n  }\n\n  changeAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(this._checkServerResponse);\n  }\n\n}\n\nexport const api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-37\",\n  headers: {\n    authorization: \"a0b3e2e0-8bf7-47b3-9f51-e543921e1ae3\",\n    \"Content-Type\": \"application/json\"\n  }\n});","map":{"version":3,"sources":["/Users/Veronika/Desktop/mesto-react/my-app/src/utils/Api.js"],"names":["Api","constructor","baseUrl","headers","_baseUrl","_headers","_checkServerResponse","res","ok","json","Promise","reject","status","getProfile","fetch","then","getInitialCards","editProfile","name","about","method","body","JSON","stringify","addCard","link","deleteCard","id","addLike","deleteLike","changeAvatar","avatar","api","authorization"],"mappings":"AAAA,MAAMA,GAAN,CAAU;AACRC,EAAAA,WAAW,OAAuB;AAAA,QAAtB;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAsB;AAChC,SAAKC,QAAL,GAAgBF,OAAhB;AACA,SAAKG,QAAL,GAAgBF,OAAhB;AACD;;AAEDG,EAAAA,oBAAoB,CAACC,GAAD,EAAM;AACxB,QAAIA,GAAG,CAACC,EAAR,EAAY;AACV,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,KAFD,MAEO;AACL,aAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;AACD;AACF;;AAEDC,EAAAA,UAAU,GAAG;AACX,WAAOC,KAAK,CAAE,GAAE,KAAKV,QAAS,WAAlB,EAA8B;AACxCD,MAAAA,OAAO,EAAE,KAAKE;AAD0B,KAA9B,CAAL,CAGNU,IAHM,CAGD,KAAKT,oBAHJ,CAAP;AAID;;AAEDU,EAAAA,eAAe,GAAG;AAChB,WAAOF,KAAK,CAAE,GAAE,KAAKV,QAAS,QAAlB,EAA2B;AACrCD,MAAAA,OAAO,EAAE,KAAKE;AADuB,KAA3B,CAAL,CAGNU,IAHM,CAGD,KAAKT,oBAHJ,CAAP;AAID;;AAEDW,EAAAA,WAAW,CAACC,IAAD,EAAOC,KAAP,EAAc;AACvB,WAAOL,KAAK,CAAE,GAAE,KAAKV,QAAS,WAAlB,EAA8B;AACxCgB,MAAAA,MAAM,EAAE,OADgC;AAExCjB,MAAAA,OAAO,EAAE,KAAKE,QAF0B;AAGxCgB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBL,QAAAA,IADmB;AAEnBC,QAAAA;AAFmB,OAAf;AAHkC,KAA9B,CAAL,CAQNJ,IARM,CAQD,KAAKT,oBARJ,CAAP;AASD;;AAEDkB,EAAAA,OAAO,CAACN,IAAD,EAAOO,IAAP,EAAa;AAClB,WAAOX,KAAK,CAAE,GAAE,KAAKV,QAAS,QAAlB,EAA2B;AACnCgB,MAAAA,MAAM,EAAE,MAD2B;AAEnCjB,MAAAA,OAAO,EAAE,KAAKE,QAFqB;AAGnCgB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBL,QAAAA,IADiB;AAEjBO,QAAAA;AAFiB,OAAf;AAH6B,KAA3B,CAAL,CAQNV,IARM,CAQD,KAAKT,oBARJ,CAAP;AASH;;AAEDoB,EAAAA,UAAU,CAACC,EAAD,EAAK;AACb,WAAOb,KAAK,CAAE,GAAE,KAAKV,QAAS,UAASuB,EAAG,EAA9B,EAAiC;AACzCP,MAAAA,MAAM,EAAE,QADiC;AAEzCjB,MAAAA,OAAO,EAAE,KAAKE;AAF2B,KAAjC,CAAL,CAINU,IAJM,CAID,KAAKT,oBAJJ,CAAP;AAKD;;AAEDsB,EAAAA,OAAO,CAACD,EAAD,EAAK;AACV,WAAOb,KAAK,CAAE,GAAE,KAAKV,QAAS,UAASuB,EAAG,QAA9B,EAAuC;AAC/CP,MAAAA,MAAM,EAAE,KADuC;AAE/CjB,MAAAA,OAAO,EAAE,KAAKE;AAFiC,KAAvC,CAAL,CAINU,IAJM,CAID,KAAKT,oBAJJ,CAAP;AAKD;;AAEDuB,EAAAA,UAAU,CAACF,EAAD,EAAK;AACb,WAAOb,KAAK,CAAE,GAAE,KAAKV,QAAS,UAASuB,EAAG,QAA9B,EAAuC;AAC/CP,MAAAA,MAAM,EAAE,QADuC;AAE/CjB,MAAAA,OAAO,EAAE,KAAKE;AAFiC,KAAvC,CAAL,CAINU,IAJM,CAID,KAAKT,oBAJJ,CAAP;AAKD;;AAEDwB,EAAAA,YAAY,CAACC,MAAD,EAAS;AACjB,WAAOjB,KAAK,CAAE,GAAE,KAAKV,QAAS,kBAAlB,EAAqC;AAC/CgB,MAAAA,MAAM,EAAE,OADuC;AAE/CjB,MAAAA,OAAO,EAAE,KAAKE,QAFiC;AAG/CgB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBQ,QAAAA;AADmB,OAAf;AAHyC,KAArC,CAAL,CAONhB,IAPM,CAOD,KAAKT,oBAPJ,CAAP;AAQD;;AArFO;;AAwFV,OAAO,MAAM0B,GAAG,GAAG,IAAIhC,GAAJ,CAAQ;AACzBE,EAAAA,OAAO,EAAE,6CADgB;AAEzBC,EAAAA,OAAO,EAAE;AACP8B,IAAAA,aAAa,EAAE,sCADR;AAEP,oBAAgB;AAFT;AAFgB,CAAR,CAAZ","sourcesContent":["class Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _checkServerResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n\n  getProfile() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n    })\n    .then(this._checkServerResponse);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n    })\n    .then(this._checkServerResponse);\n  }\n\n  editProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about,\n      }),\n    })\n    .then(this._checkServerResponse);\n  }\n\n  addCard(name, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n        method: \"POST\",\n        headers: this._headers,\n        body: JSON.stringify({\n            name,\n            link\n        })\n    })\n    .then(this._checkServerResponse)\n}\n\ndeleteCard(id) {\n  return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers\n  })\n  .then(this._checkServerResponse)\n}\n\naddLike(id) {\n  return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: \"PUT\",\n      headers: this._headers,\n  })\n  .then(this._checkServerResponse)\n}\n\ndeleteLike(id) {\n  return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers,\n  })\n  .then(this._checkServerResponse)\n}\n  \nchangeAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar,\n      }),\n    })\n    .then(this._checkServerResponse);\n  }\n}\n\nexport const api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-37\",\n  headers: {\n    authorization: \"a0b3e2e0-8bf7-47b3-9f51-e543921e1ae3\",\n    \"Content-Type\": \"application/json\",\n  },\n});"]},"metadata":{},"sourceType":"module"}